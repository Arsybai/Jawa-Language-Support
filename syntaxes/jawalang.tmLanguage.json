{   
    "scopeName":"source.jawalang",
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Jawalang",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#numbers"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#operators"
        },
        {
            "include": "#punctuation"
        },
        {
            "include": "#function"
        },
        {
            "include": "#variables"
        }
    ],
    "repository": {
        "function": {
            "patterns": [
                {
                    "name": "entity.name.function.python",
                    "match": "\\bnjabarake\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\(",
                    "captures": {
                        "1": {
                            "name": "entity.name.function.python"
                        }
                    }
                }
            ]
        },
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.number-sign.jawalang",
                    "match": "#.*$"
                },
                {
                    "name": "comment.block.jawalang",
                    "begin": "\"\"\"",
                    "end": "\"\"\"",
                    "patterns": [
                        {
                            "name": "punctuation.definition.comment.jawalang",
                            "match": "\"\"\"|\"\"\""
                        }
                    ]
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "name": "string.quoted.single.jawalang",
                    "begin": "'",
                    "end": "'",
                    "patterns": [
                        {
                            "name": "constant.character.escape.jawalang",
                            "match": "\\\\.'"
                        }
                    ]
                },
                {
                    "name": "string.quoted.double.jawalang",
                    "begin": "\"",
                    "end": "\"",
                    "patterns": [
                        {
                            "name": "constant.character.escape.jawalang",
                            "match": "\\\\.\""
                        }
                    ]
                }
            ]
        },
        "numbers": {
            "patterns": [
                {
                    "name": "constant.numeric.jawalang",
                    "match": "\\b-?(0|[1-9]\\d*)(\\.\\d+)?([eE][+-]?\\d+)?\\b"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.flow.jawalang",
                    "match": "\\b(yen|liyane|liyane tur|nalika|kangge|ing|njajal|kajaba|pungkasane|ngunggahaken|assert|kelawan|minangka|mandek|terusake|mbuh|bali|yield)\\b"
                },
                {
                    "name": "keyword.control.import.jawalang",
                    "match": "\\b(ngimpor|seka|minangka)\\b"
                },
                {
                    "name": "keyword.control.def.jawalang",
                    "match": "\\b(njabarake|kelas)\\b"
                },
                {
                    "name": "keyword.control.other.jawalang",
                    "match": "\\b(None|Iyo|Ora|global|nonlocal|del|lambda)\\b"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.assignment.jawalang",
                    "match": "="
                },
                {
                    "name": "keyword.operator.comparison.jawalang",
                    "match": "podo karo|bedo karo|<=|>=|<|>"
                },
                {
                    "name": "keyword.operator.arithmetic.jawalang",
                    "match": "\\+|-|\\*|/|//|%|\\*\\*"
                },
                {
                    "name": "keyword.operator.bitwise.jawalang",
                    "match": "\\||&|\\^|~|>>|<<"
                },
                {
                    "name": "keyword.operator.logical.jawalang",
                    "match": "lan|utowo|dudu"
                }
            ]
        },
        "punctuation": {
            "patterns": [
                {
                    "name": "punctuation.separator.arguments.jawalang",
                    "match": ","
                },
                {
                    "name": "punctuation.definition.string.begin.jawalang",
                    "match": "\"|'"
                },
                {
                    "name": "punctuation.definition.string.end.jawalang",
                    "match": "\"|'"
                },
                {
                    "name": "punctuation.definition.variable.jawalang",
                    "match": "\\$"
                },
                {
                    "name": "punctuation.separator.statement.jawalang",
                    "match": ";"
                },
                {
                    "name": "punctuation.definition.parameters.begin.jawalang",
                    "match": "\\("
                },
                {
                    "name": "punctuation.definition.parameters.end.jawalang",
                    "match": "\\)"
                },
                {
                    "name": "punctuation.definition.block.begin.jawalang",
                    "match": ":"
                },
                {
                    "name": "punctuation.definition.block.end.jawalang",
                    "match": ""
                }
            ]
        },
        "variables": {
            "patterns": [
                {
                    "name": "variable.language.jawalang",
                    "match": "\\b(None|Iyo|Ora)\\b"
                },
                {
                    "name": "variable.other.global.jawalang",
                    "match": "\\b(__\\w+__)\\b"
                },
                {
                    "name": "variable.parameter.jawalang",
                    "match": "\\b([a-zA-Z_][\\w]*)\\b(?=\\s*=)"
                },
                {
                    "name": "variable.other.class.jawalang",
                    "match": "\\b[A-Z]\\w*\\b"
                },
                {
                    "name": "variable.other.instance.jawalang",
                    "match": "\\b([a-z_][\\w]*)\\b(?=\\s*\\.\\s*\\w)"
                },
                {
                    "name": "variable.other.property.jawalang",
                    "match": "\\b([a-z_][\\w]*)\\b(?=\\s*\\()"
                },
                {
                    "name": "variable.other.normal.jawalang",
                    "match": "\\b([a-z_][\\w]*)\\b"
                }
            ]
        }
    }
}    